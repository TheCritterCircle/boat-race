class Component{constructor(t){this.gameObject={worldX:0,worldY:0},t&&(this.gameObject=t)}}
class Game{constructor(e){this.stage=new createjs.Stage(e),this.room=new Room(this),this.stage.addChild(this.room),this.hud=new HUD(this),this.stage.addChild(this.hud),this.shipInfo={},window.addEventListener("keydown",this.bindEvent("inputDown")),window.addEventListener("keyup",this.bindEvent("inputUp")),this.stage.on("stagemousemove",this.bindEvent("mouseMove")),this.stage.on("stagemousedown",this.bindEvent("mouseClick"))}bindEvent(e){return this[e].bind(this)}getSize(){return{w:this.stage.canvas.width,h:this.stage.canvas.height}}getScreenBounds(){var e=this.room?this.room.globalToLocal(0,0):{x:0,y:0};return{x:e.x,y:e.y,w:this.stage.canvas.width,h:this.stage.canvas.height}}emit(...e){this.socket&&this.socket.emit(...e)}on(...e){this.socket&&this.socket.on(...e)}join(e){var i=io(e);this.socket=i,i.on("connect",(function(){console.log("Connected to server")}));var s=this.room;s.bind("joinShip"),s.bind("addShip"),s.bind("removeShip"),i.on("pending",s.bind("reset",!0)),s.bind("fire"),s.bind("raceStart"),s.bind("moveShip"),s.bind("moveCrosshair")}update(e){this.player&&this.room.update(),this.hud.update(),this.stage.update()}mouseClick(e){this.fire(e)}fire(e){this.player&&1==this.player.mode&&(this.room.fire({id:this.player.id,name:this.player.name,crosshair:this.player.getCrosshairPos()}),this.emit("fire",this.player.getCrosshairPos()))}mouseMove(e){if(this.player&&1==this.player.mode){var i=this.player.globalToLocal(e.stageX,e.stageY);this.player.setCrosshairPos(i.x,i.y),i=this.player.getCrosshairPos(),this.emit("moveCrosshair",i)}}inputDown(e){if(this.player&&0==this.player.mode){switch(console.log("INPUT: "+e.keyCode),e.keyCode){case 38:case 87:this.player.moving.up=1;break;case 37:case 65:this.player.moving.left=1;break;case 40:case 83:this.player.moving.down=1;break;case 39:case 68:this.player.moving.right=1}var{up:i,down:s,left:t,right:o}=this.player.moving;0==i&&0==s&&0==t&&0==o||this.emit("moveShip",{x:this.player.worldX,y:this.player.worldY,moving:this.player.moving})}}inputUp(e){if(this.player&&0==this.player.mode)switch(console.log("INPUT: "+e.keyCode),e.keyCode){case 38:case 87:this.player.moving.up=0,this.emit("moveShip",{x:this.player.x,y:this.player.y,moving:this.player.moving});break;case 37:case 65:this.player.moving.left=0,this.emit("moveShip",{x:this.player.x,y:this.player.y,moving:this.player.moving});break;case 40:case 83:this.player.moving.down=0,this.emit("moveShip",{x:this.player.x,y:this.player.y,moving:this.player.moving});break;case 39:case 68:this.player.moving.right=0,this.emit("moveShip",{x:this.player.x,y:this.player.y,moving:this.player.moving})}}}
class GameObject extends createjs.Container{constructor(t,e=0,s=0){super(),this.game=t,this.x=e,this.y=s,console.log(this.constructor.name+" created")}update(){console.debug(this.constructor.name+" updated")}setPos(t,e){this.x=t,this.y=e}getPos(){return{x:this.x,y:this.y}}destroy(){console.log(this.constructor.name+" destroyed"),this.parent.removeChild(this)}}
class HUD extends createjs.Container{constructor(i){super(),this.starting=new Text("Waiting for 1 more player",{fill:{size:50}}),this.addChild(this.starting),this.minimap=new Minimap(i),this.addChild(this.minimap),this.pointermap=new Pointermap(i),this.addChild(this.pointermap)}splash(i){}update(){this.minimap.update(),this.pointermap.update()}}
class Room extends createjs.Container{constructor(s){super(),this.game=s,this.background=new createjs.Bitmap("media/background.png"),this.addChild(this.background),this.size={w:1920,h:5550};var i=this.game.getSize();this.startY=this.size.h-i.h/2,this.ships={},this.setBounds(0,0,this.size.w,this.size.h),this.cannonballs=[]}bind(s,i){if(i)return this[s].bind(this);this.game.on(s,this[s].bind(this))}update(){Object.values(this.ships).forEach(s=>{s.update()}),this.cannonballs.forEach(s=>{s.update(Object.values(this.ships))});var s=this.game.getSize(),i=this.game.player.getPos();this.x=s.w/2-i.x,this.y=s.h/2-i.y;var e=s.h-this.size.h,h=s.w-this.size.w;this.y<e?this.y=e:this.y>0&&(this.y=0),this.x<h?this.x=h:this.x>0&&(this.x=0)}reset(){this.game.hud.starting.visible=!0,console.log("We be finding you a crew..."),this.player=void 0,delete this.player,Object.values(this.ships).forEach(s=>{s.destroy()}),this.ships=new Object,this.shipInfo=new Object}fire(s){console.log("fire",s);var i=new CannonBall(this.game,this.game.room.ships[s.id||s.name]);this.addChild(i),this.cannonballs.push(i),this.cannonballs.length>10*Object.keys(this.ships).length&&this.removeCannonball(this.cannonballs[0])}removeCannonball(s){var i=this.cannonballs.indexOf(s);i>-1&&(s.destroy(),this.cannonballs.splice(i,1))}joinShip(s){for(var i in this.game.hud.starting.visible=!1,console.log("joinShip",s),console.log("You are the",(0==s.mode?"Captain":"Cannon")+"!"),this.game.shipInfo.id=s.id,this.game.shipInfo.name=s.name,this.game.shipInfo.mode=s.mode,s.ships)this.addShip(s.ships[i])}moveShip(s){console.log("moveShip",s),s.name==this.game.player.name&&0==this.game.player.mode||this.ships[s.id||s.name].updateCrumb(s)}raceStart(){console.log("Race Start")}moveCrosshair(s){console.log("moveCrosshair",s),this.ships[s.id||s.name].updateCrumb(s)}addShip(s){if(!this.ships[s.id||s.name]){console.log("addShip",s);var i=new Player(this.game,s.name);i.updateCrumb(s),this.ships[i.id||i.name]=i,this.addChild(i),!this.game.player&&(i.id&&this.game.shipInfo.id==i.id||i.name&&this.game.shipInfo.name==i.name)&&(i.id=this.game.shipInfo.id,i.mode=this.game.shipInfo.mode,console.log(0==this.game.shipInfo.mode?i.cannon+": Aye Aye Captain!":i.captain+": Ahoy Mateys!"),this.game.player=i)}}removeShip(s){console.log("removeShip",s),this.ships[s.id||s.name]&&(this.ships[s.name].destroy(),delete this.ships[s.id||s.name])}}
class Text extends createjs.Container{constructor(i,t={}){super();var l={font:"Arial",fill:{size:20,color:"#ffffff"},outline:{size:3,color:"#000000"}};t.fill=Object.assign(l.fill,t.fill),t.outline=Object.assign(l.outline,t.outline),t=Object.assign(l,t),this.fill=new createjs.Text(i,`bold ${t.fill.size}px ${t.font}`,t.fill.color),this.addChild(this.fill),this.outline=new createjs.Text(i,`bold ${t.fill.size}px ${t.font}`,t.outline.color),this.addChild(this.outline),this.outline.outline=t.outline.size}setText(i){this.fill.text=this.outline.text=i}}
class UIMap extends createjs.Container{constructor(e){super(),this.game=e,this.nodes=new createjs.Container,this.addChild(this.nodes)}newNode(e,s,t,a,...i){var h=2/(this.scaleX+this.scaleY),r=this.createNodeShape(a*h,t,...i);this.nodes.addChild(r),r.x=e,r.y=s}setScale(e){this.scaleX=e*this.game.getSize().h/this.game.room.size.h,this.scaleY=e*this.game.getSize().h/this.game.room.size.h}setPos(e,s){this.x=e*(this.game.getSize().w-this.scaleX*this.game.room.size.w),this.y=s*(this.game.getSize().h-this.scaleY*this.game.room.size.h)}update(){this.nodes.removeAllChildren(),Object.values(this.game.room.ships).map(e=>e.getCrumb(!0)).forEach(e=>{this.mapPlayer(e)})}mapPlayer(e){this.newNode(e.x,e.y,"black")}createNodeShape(e,s,...t){var a=new createjs.Shape;return a.graphics.beginFill(s).drawCircle(0,0,e),a}}
const ZERO_VECTOR={x:0,y:0};DEBUG=!0;var oldLog=console.log;function lerpXY(n,t,e){return{x:n.x+e*(t.x-n.x),y:n.y+e*(t.y-n.y)}}function generateCoins(n,t){var e=[];for(let o=0;o<n;o++)e.push(Math.random()*t.x),e.push(Math.random()*t.y);return e}function centerText(n){var t=n.getBounds();n.x+=-t.width/2}function vec(...n){return 1==n.length?"object"==typeof n[0]?Object.values(n[0]):n[0]:n}function mag2(...n){return(n=vec(...n)).reduce((n,t)=>n+t*t,0)}function mag(...n){return Math.sqrt(mag2(...n))}function norm(...n){n=vec(...n);var t=mag(...n);return n.map(n=>n/t)}function collided(n,t){var e=n.getBounds(),o=t.getBounds();return!(e.x>=o.x+o.width||e.x+e.width<=o.x||e.y>=o.y+o.height||e.y+e.height<=o.y)}console.log=(...n)=>{DEBUG&&oldLog(...n)};
class PhysicsBody extends Component{constructor(t){super(t),this.velocity={x:0,y:0},this.dampening=.035}update(){this.gameObject.x+=this.velocity.x,this.gameObject.y+=this.velocity.y,this.velocity=lerpXY(this.velocity,ZERO_VECTOR,this.dampening)}addImpulse(t,i){this.velocity.x+=t,this.velocity.y+=i}}
class CannonBall extends GameObject{constructor(s,i){super(s,...Object.values(i.getPos())),this.cannonBallGraphic=new createjs.Shape,this.radius=15,this.cannonBallGraphic.graphics.beginFill("black").drawCircle(0,0,this.radius),this.owner=i;var a=norm(i.getCrosshairPos());this.dir={x:a[0],y:a[1]},this.setBounds(0,0,this.radius,this.radius),this.ready=!1}update(s){super.update();if(this.x+=15*this.dir.x,this.y+=15*this.dir.y,collided(this,this.game.room)||(console.log("cannon out of stage"),this.game.room.removeCannonball(this)),collided(this,this.owner)||this.ready||(this.addChild(this.cannonBallGraphic),this.ready=!1),this.ready){var i=this;s.forEach(s=>{s.name!=this.owner.name&&collided(i,s)&&this.game.room.removeCannonball(this)})}}}
class Coin extends GameObject{constructor(i,c,e){super(i,c,e),this.coinGraphic=new createjs.Shape,this.coinGraphic.graphics.beginFill("Yellow").drawCircle(0,0,25),this.addChild(this.coinGraphic)}}
class Player extends GameObject{constructor(i,s,t=0,e=0){super(i,t,e),this.name=s,this.mode=-1,this.speed=.3,this.moving={up:0,down:0,left:0,right:0},this.screen=[],this.screen.length=[],this.ship=new createjs.Container,this.addChild(this.ship),this.shipGraphic=new createjs.Shape,this.ship.addChild(this.shipGraphic),this.shipGraphic.graphics.beginFill("DeepSkyBlue").drawCircle(0,0,50),this.captainNickname=new createjs.Text("Captain","15px Arial","#000000"),this.ship.addChild(this.captainNickname),this.captainNickname.y=50,centerText(this.captainNickname),this.crosshair=new createjs.Container,this.addChild(this.crosshair),this.crosshairGraphic=new createjs.Shape,this.crosshairGraphic.graphics.beginFill("Green").drawCircle(0,0,20),this.crosshair.addChild(this.crosshairGraphic),this.cannonNickname=new createjs.Text("Cannon","15px Arial","#000000"),this.crosshair.addChild(this.cannonNickname),this.cannonNickname.y=20,centerText(this.cannonNickname),this.targetLine=new createjs.Shape,this.addChild(this.targetLine),this.targetLine.graphics.setStrokeStyle(1).beginStroke("rgba(0,0,0,1)"),this.targetLine.startPoint=this.targetLine.graphics.moveTo(0,0).command;var h=this.getCrosshairPos();this.targetLine.endPoint=this.targetLine.graphics.lineTo(h.x,h.y).command,this.targetLine.graphics.endStroke(),this.physics=new PhysicsBody(this.ship)}update(){super.update(),this.setBounds(this.x,this.y,50,50),this.physics.addImpulse((this.moving.right-this.moving.left)*this.speed,(this.moving.down/2-this.moving.up)*this.speed),this.mode>-1&&(this.screen[this.mode]=this.game.getScreenBounds()),this.physics.update(),this.y+=this.ship.y,this.x+=this.ship.x,this.ship.y=0,this.ship.x=0}getPos(){return this.ship.localToLocal(0,0,this.game.room)}setCrosshairPos(i,s){this.crosshair.x=this.targetLine.endPoint.x=i,this.crosshair.y=this.targetLine.endPoint.y=s;var t=this.getActiveCannonPos();this.targetLine.startPoint.x=t.x,this.targetLine.startPoint.y=t.y}getActiveCannonPos(){var i=[{x:-20,y:-20},{x:-20,y:20},{x:20,y:20},{x:20,y:-20}],s=this.getCrosshairPos(),t=Math.atan2(s.x,s.y)+Math.PI;return i[Math.floor(t*i.length/(2*Math.PI))]}getCrosshairPos(){return{x:this.crosshair.x,y:this.crosshair.y}}getCrumb(i){if(i)return{name:this.name,x:this.getPos().x,y:this.getPos().y,moving:this.moving,screen:this.screen,crosshair:this.getCrosshairPos()};switch(this.mode){case 0:return{id:this.id,name:this.name,mode:this.mode,x:this.getPos().x,y:this.getPos().y,screen:this.screen,moving:this.moving};case 1:return{id:this.id,name:this.name,mode:this.mode,screen:this.screen,crosshair:this.getCrosshairPos()};default:return{id:this.id,name:this.name,mode:this.mode,x:this.getPos().x,y:this.getPos().y,moving:this.moving,screen:this.screen,crosshair:this.getCrosshairPos()}}}updateCrumb(i){i.id&&(this.id=i.id),i.name&&(this.name=i.name),i.mode&&(this.mode=i.mode),i.captain&&(this.captainNickname.text=this.captain=i.captain)&&centerText(this.captainNickname),i.cannon&&(this.cannonNickname.text=this.cannon=i.cannon)&&centerText(this.cannonNickname),i.screen&&(this.screen=i.screen),i.x&&i.y&&this.setPos(i.x,i.y),i.moving&&(this.moving=i.moving),i.crosshair&&this.setCrosshairPos(i.crosshair.x,i.crosshair.y)}}
class Minimap extends UIMap{constructor(e){super(e),this.box=new createjs.Shape,this.addChild(this.box),this.box.graphics.beginFill("rgba(222,222,222,.7)").drawRect(0,0,e.room.size.w,e.room.size.h),this.setChildIndex(this.box,0)}update(){super.update(),this.setScale(.4),this.setPos(.99,.02)}mapPlayer(e){this.newNode(e.x,e.y,"magenta",10)}}
class Pointermap extends UIMap{constructor(e){super(e)}mapPlayer(e){if(e.id!=this.game.player.id){var a=this.game.getSize(),r=this.game.room.localToGlobal(e.x,e.y),t=r.y,i=r.x,n=0;(t>a.h||t<0||i>a.w||i<0)&&(n=20),i>a.w&&(i=a.w-30),i<0&&(i=30),t<0&&(t=30,l=1),t>a.h&&(t=a.h-30);var l=180*Math.atan2(r.y-t,r.x-i)/Math.PI;this.newNode(i,t,"magenta",n,e.name.replace("-","&"),l)}}createNodeShape(e,a,r,t){var i=new createjs.Container,n=new createjs.Shape;i.addChild(n),n.graphics.beginFill(a).drawPolyStar(0,0,e,3,0,t);var l=new Text(r||"Player",{outline:{size:1.1}});return i.addChild(l),centerText(l),i}}
//# sourceMappingURL=game.min.js.map
